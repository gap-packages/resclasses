<!-- #################################################################### -->
<!-- ##                                                                ## -->
<!-- ##  resclaux.xml      ResClasses documentation       Stefan Kohl  ## -->
<!-- ##                                                                ## -->
<!-- #################################################################### -->

<Chapter Label="ch:InstallationAndAuxiliaryFunctions">
<Heading>Installation and Auxiliary Functions</Heading>

<!-- #################################################################### -->

<Section Label="sec:Requirements">
<Heading>Requirements</Heading>

This version of &ResClasses; needs at least &GAP;&nbsp;4.8.1,
<Package>IO</Package>&nbsp;4.4.4&nbsp;<Cite Key="IO"/>,
<Package>Polycyclic</Package>&nbsp;2.6&nbsp;<Cite Key="Polycyclic"/>
and &GAPDoc;&nbsp;1.4&nbsp;<Cite Key="GAPDoc"/>.
It can be used on all platforms for which &GAP; is available.
&ResClasses; is completely written in the &GAP; language and does
neither contain nor require external binaries.

</Section>

<!-- #################################################################### -->
<Section Label="sec:Installation">

<Heading>Installation</Heading>

Like any other &GAP; package, &ResClasses; must be installed in the
<F>pkg</F> subdirectory of the &GAP; distribution. This is accomplished by
extracting the distribution file in this directory. By default,
the package &ResClasses; is autoloaded. If you have switched autoloading
of packages off, you can load &ResClasses; via
<C>LoadPackage( "resclasses" );</C>.

</Section>

<!-- #################################################################### -->

<Section Label="sec:TheTestingRoutine">
<Heading>The testing routines</Heading>

<ManSection>
  <Func Name="ResClassesTest" Arg=""/>
  <Returns>
    <C>true</C> if no errors were found, and <C>false</C> otherwise.
  </Returns>
  <Description>
    Performs tests of the &ResClasses; package.
    Errors, i.e. differences to the correct results of the test computations,
    are reported. The processed test files are in the directory
    <F>pkg/resclasses/tst</F>.
  </Description>
</ManSection>

<ManSection>
  <Func Name="ResClassesTestExamples" Arg=""/>
  <Returns> nothing. </Returns>
  <Description>
    Runs all examples in the manual of the &ResClasses; package,
    and reports any differences between the actual output and the
    output printed in the manual.
  </Description>
</ManSection>

</Section>

<!-- #################################################################### -->

<Section Label="sec:PreparingForDistribution">
<Heading>Utilities for preparing the package for distribution</Heading>

<ManSection>
  <Func Name="ResClassesBuildManual" Arg=""/>
  <Returns> nothing. </Returns>
  <Description>
    This function is a development tool which builds the manual of the
    &ResClasses; package in the file formats &LaTeX;, PDF, HTML and
    ASCII text.
    This is accomplished using the &GAPDoc; package by Frank Lübeck and
    Max Neunhöffer. Building the manual is possible only on UNIX systems
    and requires PDF&LaTeX;.
    As all files generated by this function are included in the
    distribution file anyway, users will not need it.
  </Description>
</ManSection>

<ManSection>
  <Func Name="ConvertPackageFilesToUNIXLineBreaks" Arg="package"/>
  <Returns> nothing. </Returns>
  <Description>
    This function is a development tool which converts the text files
    of package <A>package</A> from Windows- to UNIX line breaks.
    Here <A>package</A> is assumed to be either <C>"resclasses"</C>
    or <C>"rcwa"</C>.
  </Description>
</ManSection>

<ManSection>
  <Func Name="RemoveTemporaryPackageFiles" Arg="package"/>
  <Returns> nothing. </Returns>
  <Description>
    This function is a development tool which cleans up the temporary
    files of package <A>package</A>. Here <A>package</A> is assumed to
    be either <C>"resclasses"</C> or <C>"rcwa"</C>.
  </Description>
</ManSection>

</Section>

<!-- #################################################################### -->

<Section Label="sec:LogToDatedFile">
<Heading>Creating timestamped logfiles</Heading>

<ManSection>
  <Func Name="LogToDatedFile" Arg="directory"/>
  <Returns> the full pathname of the created logfile. </Returns>
  <Description>
    This function opens a logfile in the specified directory;
    the name of the logfile has the form of a timestamp, i.e.
    <C>year-month-day hour-minute-second.log.</C>
    If &GAP; is already in logging mode, the old logfile is closed
    before the new one is opened.
  </Description>
</ManSection>

</Section>

<!-- #################################################################### -->

<Section Label="sec:SendEmailAndEmailLogFile">
<Heading>DownloadFile, SendEmail and EmailLogFile</Heading>

<ManSection>
  <Func Name="DownloadFile" Arg="url"/>
  <Returns>
    the contents of the file with URL <A>url</A> in the form of a string
    if that file exists and the download was successful, and <C>fail</C>
    otherwise.
  </Returns>
  <Description>
    As most system-related functions, <C>DownloadFile</C> works only under
    UNIX / Linux. Also the computer must of course be connected to the
    Internet.
  </Description>
</ManSection>

<ManSection>
  <Func Name="SendEmail" Arg="sendto, copyto, subject, text"/>
  <Returns>
    zero if everything worked correctly, and a system error number otherwise.
  </Returns>
  <Description>
    Sends an e-mail with subject <A>subject</A> and body <A>text</A> to the
    addresses in the list <A>sendto</A>, and copies it to those in the list
    <A>copyto</A>. The first two arguments must be lists of strings, and
    the latter two must be strings. <P/>

    As most system-related functions, <C>SendEmail</C> works only under
    UNIX / Linux. Also the computer must of course be connected to the
    Internet.
  </Description>
</ManSection>

<ManSection>
  <Func Name="EmailLogFile" Arg="addresses"/>
  <Returns>
    zero if everything worked correctly, and a system error number otherwise.
  </Returns>
  <Description>
    Sends the current log file by e-mail to <A>addresses</A>, if &GAP; is in
    logging mode and one is working under UNIX / Linux, and does nothing
    otherwise. The argument <A>addresses</A> must be either a list of e-mail
    addresses or a single e-mail address. Long log files are abbreviated,
    i.e. if the log file is larger than 64KB, then any output is truncated
    at 1KB, and if the log file is still longer than 64KB afterwards, it is
    truncated at&nbsp;64KB.
  </Description>
</ManSection>

</Section>

<!-- #################################################################### -->

<Section Label="sec:UtilityFunctions">
<Heading>Some general utility functions</Heading>

<Index Key="DifferencesList"><C>DifferencesList</C></Index>
<Index Key="QuotientsList"><C>QuotientsList</C></Index>
<Index Key="FloatQuotientsList"><C>FloatQuotientsList</C></Index>
<Index Key="RandomCombination"><C>RandomCombination</C></Index>
<Index Key="IsCommuting"><C>IsCommuting</C></Index>

There are some utility functions for lists; these are
<C>DifferencesList(<A>l</A>)</C> and <C>QuotientsList(<A>l</A>)</C>,
which return the list of differences, respectively, quotients of consecutive
entries of the list&nbsp;<A>l</A>, and the function
<C>FloatQuotientsList(<A>l</A>)</C>, which returns the list of
floating point approximations of the latter. Further there is
an operation <C>PositionsSublist(<A>list</A>,<A>sub</A>)</C>,
which returns the list of indices in the list <A>list</A> at which a sublist
equal to <A>sub</A> starts.
There also is an operation <C>RandomCombination(<A>S</A>,<A>k</A>)</C>,
which returns a random unordered <A>k</A>-tuple of distinct elements of
a set&nbsp;<A>S</A>.
Since it is sometimes faster to check whether two group- or ring elements
commute than to actually form both products and test them for equality,
there is an operation <C>IsCommuting(<A>a</A>,<A>b</A>)</C> for which
corresponding methods can be installed.

</Section>

<!-- #################################################################### -->

</Chapter>

<!-- #################################################################### -->
